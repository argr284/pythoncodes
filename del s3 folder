import boto3

def delete_s3_folder(bucket_name, folder_prefix):
    """
    Deletes all objects under a given folder prefix in the specified S3 bucket.
    
    Args:
        bucket_name (str): Name of the S3 bucket.
        folder_prefix (str): Prefix (folder path) to delete, e.g., 'myfolder/'.
    """
    s3 = boto3.client('s3')
    
    # Get all objects with the prefix (folder path)
    response = s3.list_objects_v2(Bucket=bucket_name, Prefix=folder_prefix)
    
    # If there are objects found under the prefix
    if 'Contents' in response:
        objects_to_delete = [{'Key': obj['Key']} for obj in response['Contents']]
        
        # Delete them
        delete_response = s3.delete_objects(
            Bucket=bucket_name,
            Delete={'Objects': objects_to_delete}
        )
        
        print(f"Deleted objects: {delete_response}")
    else:
        print("No objects found under that prefix.")

# Example usage
delete_s3_folder('your-bucket-name', 'folder-name/')



+++
import boto3

s3 = boto3.client('s3')

def list_s3_objects(bucket_name, prefix=''):
    response = s3.list_objects_v2(Bucket=bucket_name, Prefix=prefix)

    if 'Contents' in response:
        for obj in response['Contents']:
            print(obj['Key'])  # Object key (file path)
    else:
        print("No objects found.")

# Example
list_s3_objects('your-bucket-name')

++++
import boto3

def list_objects_from_s3_path(s3_path):
    # Remove s3://
    s3_path = s3_path.replace('s3://', '')
    
    # Split into bucket and prefix
    bucket, *key_parts = s3_path.split('/', 1)
    prefix = key_parts[0] if key_parts else ''

    s3 = boto3.client('s3')

    response = s3.list_objects_v2(Bucket=bucket, Prefix=prefix)

    if 'Contents' in response:
        for obj in response['Contents']:
            print(obj['Key'])
    else:
        print("No objects found.")

# Example usage
list_objects_from_s3_path('s3://my-bucket/folder1/subfolder/')


+++
import boto3

def delete_s3_subfolder_with_confirmation(s3_path):
    # Step 1: Clean and split S3 path
    s3_path = s3_path.replace('s3://', '')
    bucket, *key_parts = s3_path.split('/', 1)
    prefix = key_parts[0] if key_parts else ''
    
    if not prefix.endswith('/'):
        prefix += '/'

    # Display what will be deleted
    print(f"✅ You are about to delete everything under:\ns3://{bucket}/{prefix}")
    confirm = input("❗Do you want to continue? (yes/no): ").strip().lower()

    if confirm != 'yes':
        print("⛔ Deletion cancelled.")
        return

    # Step 2: Connect to S3
    s3 = boto3.client('s3')
    paginator = s3.get_paginator('list_objects_v2')
    pages = paginator.paginate(Bucket=bucket, Prefix=prefix)

    # Step 3: Delete all listed objects
    objects_to_delete = []
    for page in pages:
        for obj in page.get('Contents', []):
            objects_to_delete.append({'Key': obj['Key']})

    if objects_to_delete:
        response = s3.delete_objects(
            Bucket=bucket,
            Delete={'Objects': objects_to_delete}
        )
        print(f"✅ Deleted {len(objects_to_delete)} objects from s3://{bucket}/{prefix}")
    else:
        print("⚠️ No objects found under the given path.")

# Example call
delete_s3_subfolder_with_confirmation('s3://my-bucket/folder1/subfolder/')